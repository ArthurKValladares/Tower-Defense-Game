# Dear ImGui
set(IMGUI_DIR ../vendor/imgui)
include_directories(${IMGUI_DIR} ${IMGUI_DIR}/backends)
set(IMGUI_SRCS
    ${IMGUI_DIR}/backends/imgui_impl_sdl3.cpp
    ${IMGUI_DIR}/backends/imgui_impl_vulkan.cpp
    ${IMGUI_DIR}/imgui.cpp
    ${IMGUI_DIR}/imgui_draw.cpp
    ${IMGUI_DIR}/imgui_tables.cpp
    ${IMGUI_DIR}/imgui_widgets.cpp
    ${IMGUI_DIR}/imgui_demo.cpp
)

set(STB_DIR ../vendor/stb)
include_directories(${STB_DIR})

add_executable(TD 
    main.cpp
    # Renderer
    renderer/vk_engine.cpp
    renderer/vk_initializers.cpp
    renderer/vk_image.cpp
    renderer/vk_descriptors.cpp
    renderer/vk_string.cpp
    renderer/vk_pipelines.cpp
    renderer/vk_gltf_material.cpp
    renderer/vk_renderable.cpp
    renderer/vk_material.cpp
    renderer/camera.cpp
    # Editor
    map_editor/map.cpp
    # Geometry
    geometry/cube.cpp
    # Imgui
    ${IMGUI_SRCS}
)

target_compile_features(TD PRIVATE cxx_std_23)
target_compile_definitions(TD PUBLIC GLM_FORCE_DEPTH_ZERO_TO_ONE)
set_target_properties(TD PROPERTIES CXX_EXTENSIONS off CXX_STANDARD_REQUIRED on)

if (MSVC)
    # Maybe /W4 /Wall instead of /W3
    target_compile_options(TD PRIVATE)
    add_compile_definitions(_DISABLE_VECTOR_ANNOTATION _DISABLE_STRING_ANNOTATION)
else ()
    target_compile_options(TD PRIVATE -Wall -Wextra -Wpedantic -isystem)
endif ()